{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/draw.service.ts","./src/app/drawer/drawer.component.ts","./src/app/drawer/drawer.component.html","./src/app/file-convert.service.ts","./src/app/file-form/file-form.component.ts","./src/app/file-form/file-form.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FTFileWeb';\n}\n","<div class=\"outerDiv\">\n  <app-file-form class=\"file-form\"></app-file-form>\n  <app-drawer class=\"drawer\"></app-drawer>\n</div>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FileFormComponent } from './file-form/file-form.component';\nimport { DrawerComponent } from './drawer/drawer.component';\n\n@NgModule({\n  declarations: [AppComponent, FileFormComponent, DrawerComponent],\n  imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\r\nimport { time } from 'console';\r\nimport { FTBuffer, FTDrawer } from 'ftfiles';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DrawService {\r\n  filebinaryString: string = '';\r\n  canvas: HTMLCanvasElement | undefined = undefined;\r\n\r\n  constructor() {}\r\n\r\n  configure(file: string, canvas: HTMLCanvasElement) {\r\n    this.filebinaryString = file;\r\n    this.canvas = canvas;\r\n  }\r\n  isConfigured(): boolean {\r\n    return this.filebinaryString != '' && this.canvas != undefined;\r\n  }\r\n  draw(scale: number, points: number) {\r\n    if (this.isConfigured()) {\r\n      const buf = Buffer.from(this.filebinaryString, 'latin1');\r\n      const ftBuf = new FTBuffer();\r\n      ftBuf.readFromBuffer(buf);\r\n      const ftDraw = new FTDrawer(ftBuf.getCoefficients());\r\n\r\n      ftDraw.setCanvas(this.canvas!);\r\n      ftDraw.setScale(scale);\r\n      ftDraw.draw(points);\r\n      \r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { type } from 'os';\r\nimport { DrawService } from '../draw.service';\r\n\r\n@Component({\r\n  selector: 'app-drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.css'],\r\n})\r\nexport class DrawerComponent implements OnInit {\r\n  nm: FormControl = new FormControl();\r\n  scale: FormControl = new FormControl(1);\r\n  points: FormControl = new FormControl(100);\r\n  binaryFile: string | null = '';\r\n  canvas: HTMLCanvasElement | undefined = undefined;\r\n\r\n  constructor(private drawService: DrawService) {}\r\n\r\n  setCanvas(canvas: HTMLCanvasElement) {\r\n    this.canvas = canvas;\r\n  }\r\n\r\n  onChangeForm(event: any) {\r\n    try {\r\n      const file = event.target.files[0];\r\n      const fReader = new FileReader();\r\n      fReader.readAsBinaryString(file);\r\n      fReader.onloadend = (_event: any) => {\r\n        this.binaryFile = _event.target.result;\r\n        if (this.canvas == undefined || this.binaryFile == null) {\r\n          console.log('what');\r\n        } else {\r\n          this.drawService.configure(this.binaryFile, this.canvas);\r\n          //console.log(atob(this.binaryFile.split(',')[1]));\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.reset();\r\n    }\r\n    this.reset();\r\n  }\r\n\r\n  draw() {\r\n    if (this.drawService.isConfigured()) {\r\n      this.drawService.draw(this.scale.value, this.points.value);\r\n    } else {\r\n      console.log('Something went wrong');\r\n    }\r\n  }\r\n  reset() {\r\n    this.binaryFile = null;\r\n  }\r\n  ngOnInit(): void {\r\n    this.canvas = document.getElementById('drawCanvas') as HTMLCanvasElement;\r\n  }\r\n}\r\n","<p class=\"title\">Import FTF File to draw</p>\r\n<input\r\n  class=\"fileInput\"\r\n  (change)=\"onChangeForm($event)\"\r\n  type=\"file\"\r\n  [formControl]=\"nm\"\r\n  #fileForm\r\n/>\r\n<input\r\n  class=\"numberInputScale\"\r\n  type=\"number\"\r\n  [formControl]=\"scale\"\r\n  min=\"0\"\r\n  #numberFormScale\r\n/>\r\n<input\r\n  class=\"numberInputPoints\"\r\n  type=\"number\"\r\n  [formControl]=\"points\"\r\n  min=\"1\"\r\n  (change)=\"draw()\"\r\n  #numberFormPoints\r\n/>\r\n<button class=\"button\" (click)=\"fileForm.click()\" #uploadButton>Upload</button>\r\n<button class=\"button\" (click)=\"draw()\" #drawButton>Draw</button>\r\n\r\n<canvas\r\n  class=\"drawCanvas\"\r\n  height=\"1000\"\r\n  width=\"1000\"\r\n  id=\"drawCanvas\"\r\n  #drawCanvas\r\n></canvas>\r\n","import { Injectable } from '@angular/core';\nimport { FTProcessor, FTBuffer } from 'ftfiles';\nimport { saveAs } from 'file-saver';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileConvertService {\n  pathSvgString: string = '';\n  processedFile: FTProcessor | undefined = undefined;\n  newFileName: string = '';\n  constructor() {}\n\n  configure(fileBase64String: string, newFileName: string) {\n    this.pathSvgString = atob(fileBase64String.split(',')[1]);\n    this.newFileName = newFileName;\n  }\n  isConfigured(): boolean {\n    return this.newFileName != '' && this.pathSvgString != '';\n  }\n  processFile(points: number) {\n    const parser = new DOMParser();\n    const document = parser.parseFromString(\n      this.pathSvgString,\n      'image/svg+xml'\n    );\n    const path = document.querySelector('path');\n\n    if (path) {\n      const ftProc = new FTProcessor(path);\n      ftProc.processPoints(points);\n      ftProc.dft();\n      const ftBuf = new FTBuffer();\n      ftBuf.setCoefficients(ftProc.getCoefficients());\n      const fileBuffer = ftBuf.writeToBuffer();\n      const blob = new Blob([fileBuffer], { type: 'application/octet-stream' });\n      saveAs(blob, this.newFileName);\n    }\n  }\n}\n","import { FormControl, Validators } from '@angular/forms';\n\nimport { Component, OnInit } from '@angular/core';\nimport { FileConvertService } from '../file-convert.service';\n\n@Component({\n  selector: 'app-file-form',\n  templateUrl: './file-form.component.html',\n  styleUrls: ['./file-form.component.css'],\n})\nexport class FileFormComponent implements OnInit {\n  nm: FormControl = new FormControl('');\n  points: FormControl = new FormControl(100);\n  status: string = '';\n  filename: string | null = '';\n  base64File: string | null = '';\n\n  constructor(private fileConvert: FileConvertService) {}\n\n  onChangeForm(event: any) {\n    try {\n      const file = event.target.files[0];\n      const fReader = new FileReader();\n      fReader.readAsDataURL(file);\n      fReader.onloadend = (_event: any) => {\n        this.filename = file.name.split('.')[0] + '.ftf';\n        this.base64File = _event.target.result;\n\n        if (!this.base64File?.startsWith('data:image/svg+xml')) {\n          this.status += 'Not svg file\\n';\n        } else {\n          this.fileConvert.configure(this.base64File, this.filename);\n          this.status +=\n            'Got (base64 encoded): ' + this.base64File.split(';')[0] + '\\n';\n        }\n      };\n    } catch (error) {\n      this.status += 'no file was selected...';\n      this.status += error;\n      this.reset();\n    }\n    this.reset();\n  }\n\n  convert() {\n    if (this.fileConvert.isConfigured()) {\n      this.status += 'Converting with ' + this.points.value + ' points... \\n';\n      this.fileConvert.processFile(this.points.value);\n      this.status += 'Returning file: ' + this.filename + '\\n';\n    } else {\n      this.status += 'no file was selected... \\n';\n    }\n  }\n  reset() {\n    this.filename = null;\n    this.base64File = null;\n    this.status = '';\n  }\n\n  ngOnInit(): void {}\n}\n","<p class=\"title\">Import SVG (single path) File to convert</p>\n<label for=\"numberForm\">Amount of points to integrate: </label>\n<input\n  class=\"fileInput\"\n  (change)=\"onChangeForm($event)\"\n  type=\"file\"\n  [formControl]=\"nm\"\n  #fileForm\n/>\n<input\n  class=\"numberInput\"\n  type=\"number\"\n  [formControl]=\"points\"\n  min=\"1\"\n  id=\"numberForm\"\n/>\n<button class=\"button\" (click)=\"fileForm.click()\" #uploadButton>Upload</button>\n<button class=\"button\" (click)=\"convert()\" #uploadButton>Convert</button>\n\n<div id=\"\" class=\"output\">{{ this.status }}</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}